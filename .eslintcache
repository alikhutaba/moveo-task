[{"D:\\moveo\\moveo-task\\src\\index.js":"1","D:\\moveo\\moveo-task\\src\\reportWebVitals.js":"2","D:\\moveo\\moveo-task\\src\\App.js":"3","D:\\moveo\\moveo-task\\src\\Components\\Bar\\Bar.js":"4","D:\\moveo\\moveo-task\\src\\Components\\Buttons\\Play.js":"5","D:\\moveo\\moveo-task\\src\\Components\\Buttons\\Pause.js":"6","D:\\moveo\\moveo-task\\src\\Views\\Pad\\Pad.js":"7","D:\\moveo\\moveo-task\\src\\Views\\Title\\Title.js":"8","D:\\moveo\\moveo-task\\src\\Views\\Record\\Record.js":"9"},{"size":549,"mtime":1611165898850,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1653,"mtime":1611166819534,"results":"13","hashOfConfig":"11"},{"size":643,"mtime":1611165669770,"results":"14","hashOfConfig":"11"},{"size":509,"mtime":1611166742897,"results":"15","hashOfConfig":"11"},{"size":520,"mtime":1611165684153,"results":"16","hashOfConfig":"11"},{"size":1944,"mtime":1611166713912,"results":"17","hashOfConfig":"11"},{"size":250,"mtime":1611165139914,"results":"18","hashOfConfig":"11"},{"size":1971,"mtime":1611165003375,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rnurcl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"D:\\moveo\\moveo-task\\src\\index.js",[],["40","41"],"D:\\moveo\\moveo-task\\src\\reportWebVitals.js",[],"D:\\moveo\\moveo-task\\src\\App.js",[],"D:\\moveo\\moveo-task\\src\\Components\\Bar\\Bar.js",[],"D:\\moveo\\moveo-task\\src\\Components\\Buttons\\Play.js",[],"D:\\moveo\\moveo-task\\src\\Components\\Buttons\\Pause.js",[],"D:\\moveo\\moveo-task\\src\\Views\\Pad\\Pad.js",["42"],"D:\\moveo\\moveo-task\\src\\Views\\Title\\Title.js",[],"D:\\moveo\\moveo-task\\src\\Views\\Record\\Record.js",["43"],"import React from \"react\";\r\nimport \"./Record.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Record() {\r\n\r\n    const [audioURL, setAudioURL] = useState(\"\");\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [recorder, setRecorder] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Lazily obtain recorder first time we're recording.\r\n        if (recorder === null) {\r\n            if (isRecording) {\r\n                requestRecorder().then(setRecorder, console.error);\r\n            }\r\n\r\n            console.log(audioURL)\r\n            return;\r\n        }\r\n\r\n        // Manage recorder state.\r\n        if (isRecording) {\r\n            recorder.start();\r\n        } else {\r\n            recorder.stop();\r\n        }\r\n\r\n        // Obtain the audio when ready.\r\n        const handleData = e => {\r\n            setAudioURL(URL.createObjectURL(e.data));\r\n        };\r\n\r\n        recorder.addEventListener(\"dataavailable\", handleData);\r\n        return () => recorder.removeEventListener(\"dataavailable\", handleData);\r\n    }, [recorder, isRecording]);\r\n\r\n\r\n    function startRecording() {\r\n        setIsRecording(true);\r\n    }\r\n\r\n    function stopRecording() {\r\n        setIsRecording(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row record\">\r\n\r\n            <div className=\"col-sm-4\">\r\n\r\n                {isRecording ?\r\n                    <button onClick={stopRecording} type=\"button\" className=\"btn btn-primary\">Stop Record</button>\r\n                    :\r\n                    <button onClick={startRecording} type=\"button\" className=\"btn btn-primary\">Start Record</button>\r\n                }\r\n\r\n            </div>\r\n            <div className=\"col-sm-8\">\r\n\r\n                <audio src={audioURL} controls />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nasync function requestRecorder() {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    return new MediaRecorder(stream);\r\n}",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":46,"column":71,"nodeType":"50","messageId":"51","endLine":46,"endColumn":72,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":36,"column":8,"nodeType":"55","endLine":36,"endColumn":31,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["59","60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'audioURL'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"messageId":"62","fix":"63","desc":"64"},{"messageId":"65","fix":"66","desc":"67"},{"desc":"68","fix":"69"},"removeEscape",{"range":"70","text":"71"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"72","text":"73"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [recorder, isRecording, audioURL]",{"range":"74","text":"75"},[1535,1536],"",[1535,1535],"\\",[1064,1087],"[recorder, isRecording, audioURL]"]